{"ast":null,"code":"import _asyncToGenerator from \"/Users/constantin-bogdanbumbeneci/Desktop/Licenta/Diploma/Proiect/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { DOCUMENT } from \"@angular/common\";\nimport { Energy } from './Entity/energy';\nlet AppComponent = class AppComponent {\n  constructor(userService, plantService, router, randerer, datePipe, document) {\n    this.userService = userService;\n    this.plantService = plantService;\n    this.router = router;\n    this.randerer = randerer;\n    this.datePipe = datePipe;\n    this.document = document;\n    this.title = 'my-virtual-power-plant-ng';\n    this._toggled = false;\n    this._energies = Array();\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      (yield _this.plantService.getPlants()).forEach( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (next) {\n          _this._plants = next;\n\n          _this._plants.forEach(p => {\n            _this._energies.push(new Energy());\n          });\n\n          for (let i = 0; i < _this._energies.length; i++) {\n            (yield _this.plantService.fetchPlantDatasBetweenDates(_this._plants[i], '2022-01-01', '2022-12-31')).forEach(ps => {\n              _this._energies[i].status = ps;\n\n              _this._energies[i].status.filter( //Today Data\n              //Today Data\n              s => _this.datePipe.transform(s.dateTime, 'yyyy-MM-dd') == _this.datePipe.transform(new Date(), 'yyyy-MM-dd')).forEach(s => {\n                _this._energies[i].todayCurrent.push(s.current);\n\n                _this._energies[i].todayVoltage.push(s.voltage);\n\n                _this._energies[i].todayPowerFactor.push(s.powerFactor);\n\n                _this._energies[i].todayHours.push(_this.datePipe.transform(s.dateTime, 'yyyy-MM-ddThh:mm:ss').substring(11));\n\n                _this._energies[i].todayPower.push(s.voltage * s.current * s.powerFactor);\n\n                _this._energies[i].todayEnergy += s.voltage * s.current * s.powerFactor;\n              });\n\n              _this._energies[i].status.forEach( //Every month Data\n              //Every month Data\n              s => {\n                _this._energies[i].thisYearEnergy[_this.datePipe.transform(s.dateTime, 'MM') - 1] += s.voltage * s.current * s.powerFactor;\n                _this._energies[i].thisYearTotalEnergy += s.voltage * s.current * s.powerFactor;\n              });\n\n              for (let j = 0; j < 12; j++) {\n                if (j + 1 != _this.daysInMonth(j + 1, _this.datePipe.transform(new Date(), 'MM'))) {\n                  _this._energies[i].thisYearEnergy[j] *= _this.daysInMonth(j + 1, _this.datePipe.transform(new Date(), 'yyyy') - 1) / _this.daysInMonth(j + 1, _this.datePipe.transform(new Date(), 'yyyy'));\n                } else {\n                  _this._energies[i].thisYearEnergy[j] *= (_this.datePipe.transform(new Date(), 'dd') - 1) / _this.datePipe.transform(new Date(), 'dd');\n                }\n              }\n\n              _this._energies[i].todayEnergy *= (_this._energies[i].todayHours.length - 1) / _this._energies[i].todayHours.length;\n            });\n            _this._energies[i].plant = _this._plants[i];\n          }\n\n          console.log(_this._energies);\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  } // ngAfterViewInit(): void {}\n\n\n  isAuthenticated() {\n    return this.userService.isAuthenticated();\n  }\n\n  getLogedUsername() {\n    return this.userService.getCurrentUser().username;\n  }\n\n  logout() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      (yield _this2.userService.logout()).subscribe();\n    })();\n  }\n\n  getSelectedPlant() {\n    return this.plantService.getSelectedPlant();\n  }\n\n  goHome() {\n    this.plantService.setSelectedPlant(null);\n    localStorage.removeItem(\"selectedPlant\");\n  }\n\n  toggleSideNav() {\n    this._toggled = !this._toggled;\n\n    if (this._toggled) {\n      this.randerer.removeClass(this.document.body, 'sb-sidenav-toggled');\n      this.randerer.addClass(this.document.body, 'sb-nav-fixed');\n    } else {\n      this.randerer.removeClass(this.document.body, 'sb-nav-fixed');\n      this.randerer.addClass(this.document.body, 'sb-sidenav-toggled');\n    }\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n}), __param(5, Inject(DOCUMENT))], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["/Users/constantin-bogdanbumbeneci/Desktop/Licenta/Diploma/Proiect/frontend/src/app/app.component.ts"],"names":["__decorate","__param","Component","Inject","DOCUMENT","Energy","AppComponent","constructor","userService","plantService","router","randerer","datePipe","document","title","_toggled","_energies","Array","ngOnInit","getPlants","forEach","next","_plants","p","push","i","length","fetchPlantDatasBetweenDates","ps","status","filter","s","transform","dateTime","Date","todayCurrent","current","todayVoltage","voltage","todayPowerFactor","powerFactor","todayHours","substring","todayPower","todayEnergy","thisYearEnergy","thisYearTotalEnergy","j","daysInMonth","plant","console","log","isAuthenticated","getLogedUsername","getCurrentUser","username","logout","subscribe","getSelectedPlant","goHome","setSelectedPlant","localStorage","removeItem","toggleSideNav","removeClass","body","addClass","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { DOCUMENT } from \"@angular/common\";\nimport { Energy } from './Entity/energy';\nlet AppComponent = class AppComponent {\n    constructor(userService, plantService, router, randerer, datePipe, document) {\n        this.userService = userService;\n        this.plantService = plantService;\n        this.router = router;\n        this.randerer = randerer;\n        this.datePipe = datePipe;\n        this.document = document;\n        this.title = 'my-virtual-power-plant-ng';\n        this._toggled = false;\n        this._energies = Array();\n    }\n    async ngOnInit() {\n        (await this.plantService.getPlants()).forEach(async (next) => {\n            this._plants = next;\n            this._plants.forEach(p => {\n                this._energies.push(new Energy());\n            });\n            for (let i = 0; i < this._energies.length; i++) {\n                (await this.plantService.fetchPlantDatasBetweenDates(this._plants[i], '2022-01-01', '2022-12-31')).forEach(ps => {\n                    this._energies[i].status = ps;\n                    this._energies[i].status.filter(//Today Data\n                    //Today Data\n                    s => this.datePipe.transform(s.dateTime, 'yyyy-MM-dd') == this.datePipe.transform(new Date(), 'yyyy-MM-dd'))\n                        .forEach(s => {\n                        this._energies[i].todayCurrent.push(s.current);\n                        this._energies[i].todayVoltage.push(s.voltage);\n                        this._energies[i].todayPowerFactor.push(s.powerFactor);\n                        this._energies[i].todayHours.push(this.datePipe.transform(s.dateTime, 'yyyy-MM-ddThh:mm:ss').substring(11));\n                        this._energies[i].todayPower.push(s.voltage * s.current * s.powerFactor);\n                        this._energies[i].todayEnergy += s.voltage * s.current * s.powerFactor;\n                    });\n                    this._energies[i].status.forEach(//Every month Data\n                    //Every month Data\n                    s => {\n                        this._energies[i].thisYearEnergy[this.datePipe.transform(s.dateTime, 'MM') - 1] += s.voltage * s.current * s.powerFactor;\n                        this._energies[i].thisYearTotalEnergy += s.voltage * s.current * s.powerFactor;\n                    });\n                    for (let j = 0; j < 12; j++) {\n                        if ((j + 1) != this.daysInMonth(j + 1, this.datePipe.transform(new Date(), 'MM'))) {\n                            this._energies[i].thisYearEnergy[j] *= (this.daysInMonth(j + 1, this.datePipe.transform(new Date(), 'yyyy') - 1) / (this.daysInMonth(j + 1, this.datePipe.transform(new Date(), 'yyyy'))));\n                        }\n                        else {\n                            this._energies[i].thisYearEnergy[j] *= (this.datePipe.transform(new Date(), 'dd') - 1) / this.datePipe.transform(new Date(), 'dd');\n                        }\n                    }\n                    this._energies[i].todayEnergy *= (this._energies[i].todayHours.length - 1) / this._energies[i].todayHours.length;\n                });\n                this._energies[i].plant = this._plants[i];\n            }\n            console.log(this._energies);\n        });\n    }\n    // ngAfterViewInit(): void {}\n    isAuthenticated() {\n        return this.userService.isAuthenticated();\n    }\n    getLogedUsername() {\n        return this.userService.getCurrentUser().username;\n    }\n    async logout() {\n        (await this.userService.logout()).subscribe();\n    }\n    getSelectedPlant() {\n        return this.plantService.getSelectedPlant();\n    }\n    goHome() {\n        this.plantService.setSelectedPlant(null);\n        localStorage.removeItem(\"selectedPlant\");\n    }\n    toggleSideNav() {\n        this._toggled = !this._toggled;\n        if (this._toggled) {\n            this.randerer.removeClass(this.document.body, 'sb-sidenav-toggled');\n            this.randerer.addClass(this.document.body, 'sb-nav-fixed');\n        }\n        else {\n            this.randerer.removeClass(this.document.body, 'sb-nav-fixed');\n            this.randerer.addClass(this.document.body, 'sb-sidenav-toggled');\n        }\n    }\n};\nAppComponent = __decorate([\n    Component({\n        selector: 'app-root',\n        templateUrl: './app.component.html',\n        styleUrls: ['./app.component.css']\n    }),\n    __param(5, Inject(DOCUMENT))\n], AppComponent);\nexport { AppComponent };\n"]},"metadata":{},"sourceType":"module"}